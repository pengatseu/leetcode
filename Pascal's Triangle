Given numRows, generate the first numRows of Pascal's triangle.

For example, given numRows = 5,
Return

[
     [1],
    [1,1],
   [1,2,1],
  [1,3,3,1],
 [1,4,6,4,1]
]

本题我就按照普通的杨辉三角的计算方法解决该问题，及从第三行开始使用上行的结果来计算该行除去首尾位置的值。耗费的时间比较多
本题代码如下：
class Solution {
public:
    vector<vector<int> > generate(int numRows) {
    vector<vector<int> > result;
    vector<int> cur, temp;
    if(!numRows) return result;  //由于这里的函数必须有返回值，不能什么都不返回(不能写成return;)，所以返回一个空的容器
    if(numRows == 1)   //只要考虑numRows为1的情况，为2的情况不需要考虑
    {
        cur.push_back(1);   
        result.push_back(cur);  //将[1]放入结果中  
        return result;
    }
    cur.push_back(1);   
    result.push_back(cur);  //将[1]放入结果中
    cur.push_back(1);  
    result.push_back(cur);  //将[1,1]放入结果中
    for(int i = 2; i != numRows; i++)
    {
        cur.clear();
        cur.push_back(1);
        temp = result.back();
        for(int j = 0; j != temp.size()-1; j++)  //两两相加，故范围从0——size()-1
        {
            cur.push_back(temp[j]+temp[j+1]);   
        }
        cur.push_back(1);
        result.push_back(cur);
    }
    return result;
    }
};
