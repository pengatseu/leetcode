Given an array of size n, find the majority element. The majority element is the element that appears more than ⌊ n/2 ⌋ times.

You may assume that the array is non-empty and the majority element always exist in the array.

Credits:
Special thanks to @ts for adding this problem and creating all test cases.

思路：参考剑指offer

代码如下：
class Solution {
public:
    int majorityElement(vector<int>& nums) {
       int result, num = 0;
       for(int i = 0; i < nums.size(); ++i)
       {
           if(num ==0)
           {
               ++num;
               result = nums[i];
           }
           else if(result == nums[i])
           {
               ++num;
           }
           else
           {
               --num;
           }
       }
       return result;
    }
};
