Given an index k, return the kth row of the Pascal's triangle.

For example, given k = 3,
Return [1,3,3,1].

Note:
Could you optimize your algorithm to use only O(k) extra space?

本题主要思路是用一个额外额的空间用来保存上一行的值
代码如下：
class Solution {
public:
    vector<int> getRow(int rowIndex) {
    if(!rowIndex)  return vector<int>(1,1);
    vector<int> temp(2,1);
    vector<int> result(temp);
    for(int i = 1; i != rowIndex; i++) //此处的index为1相当于Pascal's Triangle题中的长度为2，两者效果一样
    {
        result.clear();
        result.push_back(1);
        for(int j = 0; j != temp.size()-1; j++)
        {
            result.push_back(temp[j]+temp[j+1]);   
        }
        result.push_back(1);
        temp = result;
    }
    return result;
    }
};
