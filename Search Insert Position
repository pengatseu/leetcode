Given a sorted array and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.

You may assume no duplicates in the array.

Here are few examples.
[1,3,5,6], 5 → 2
[1,3,5,6], 2 → 1
[1,3,5,6], 7 → 4
[1,3,5,6], 0 → 0

可参考http://blog.csdn.net/linhuanmars/article/details/20278967
本题只要采用二分查找法就可以，代码如下
class Solution {
public:
    int searchInsert(int A[], int n, int target) {
    int low = 0, height = n-1;
    while(low <= height)  //记得=不能漏掉，只有low>height时不再循环
    {
        int mid = (low+height)/2;
        if(target < A[mid])
        {
            height = mid - 1;
        }
        else if(target > A[mid])
        {
            low = mid + 1;
        }
        else
        {
            return mid;
        }
    }
    return low; //返回low
    }
};
